#include "frame.h"

//  GLOBAL VARIABLES DEFINED HERE, DECLARED IN foryue.h
OutPanel* outpanel;
InPanel* inpanel;
ScrollCode* sc; 

const char* const MyFrame::setColourLabels[] = {
    "background",
    "margin",
    "line numbers",
    "saved line",
    "preprocessor",
    "keywords",
    "identifiers",
    "numbers",
    "strings",
    "comments",
    "other symbols"
};

MyFrame::MyFrame(const wxString& title, int fd_togdb, int fd_fromgdb, FILE* fp) :
    wxFrame(NULL, wxID_ANY, title, wxPoint(20, 60), wxDefaultSize)
{
    //  CREATE A MENU BAR
    wxMenuBar* menuBar = new wxMenuBar();

    wxMenu* setColoursMenu = new wxMenu;
    for (int id = ID_SET_COLOUR_BACKGROUND, i = 0; id <= ID_SET_COLOUR_OTHER; ++id, ++i) {
	setColoursMenu->Append(id, setColourLabels[i]);
	if (id == ID_SET_COLOUR_SAVED)
	    setColoursMenu->AppendSeparator();
    }
    menuBar->Append(setColoursMenu, "&Set Colours");

    wxMenu* helpMenu = new wxMenu;
    helpMenu->Append(wxID_ABOUT, "&About\tF1", "Show about dialog");
    menuBar->Append(helpMenu, "&Help");
    SetMenuBar(menuBar);

    sc = new ScrollCode(this, fp);

    Bind(wxEVT_MENU, &MyFrame::OnAbout, this, wxID_ABOUT);
    for (int id = ID_SET_COLOUR_BACKGROUND; id <= ID_SET_COLOUR_OTHER; ++id) {
	Bind(wxEVT_MENU, &ScrollCode::OnSetColours, sc, id);
    }
    //  CREATE TWO PANELS, GIVING EACH A FILE DESCRIPTOR TO gdb
    inpanel = new InPanel(this, fd_togdb);
    outpanel = new OutPanel(this, fd_fromgdb);
    //  MANAGE THE LAYOUT OF THIS FRAME
    wxBoxSizer* sizer = new wxBoxSizer(wxHORIZONTAL);
    sizer->Add(sc, 1, wxEXPAND | wxLEFT | wxRIGHT, 0);
    wxBoxSizer* sizer1 = new wxBoxSizer(wxVERTICAL);
    sizer1->Add(inpanel, 1, wxALIGN_RIGHT | wxEXPAND | wxALL, 0);
    sizer1->Add(outpanel, 14, wxALIGN_RIGHT | wxEXPAND | wxALL, 0); 
    
    sizer->Add(sizer1, 1, wxEXPAND);
    SetSizerAndFit(sizer);
    Show(true);
}

void MyFrame::OnAbout(wxCommandEvent& WXUNUSED(event))
{
    extern char* COMPILED;			// generated by Makefile

    wxMessageBox(wxString::Format("by %s\n\n%s\n%s\ncompiled %s\n",
        AUTHOR_EMAIL,
        wxVERSION_STRING,
        wxGetOsDescription(), COMPILED),
        wxString::Format("%s %s", APPNAME, APPVERSION),
        wxOK | wxICON_INFORMATION);
}
